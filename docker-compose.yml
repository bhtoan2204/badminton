version: '3.8'
services:
  gateway:
    image: mjkundta/gateway:latest
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: npm run start:dev gateway
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  auth:
    image: mjkundta/auth:latest
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  user:
    image: mjkundta/user:latest
    build:
      context: .
      dockerfile: ./apps/user/Dockerfile
      target: development
    command: npm run start:dev user
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  payment:
    image: mjkundta/payment:latest
    build:
      context: .
      dockerfile: ./apps/payment/Dockerfile
      target: development
    command: npm run start:dev payment
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  sms:
    image: mjkundta/sms:latest
    build:
      context: .
      dockerfile: ./apps/sms/Dockerfile
      target: development
    command: npm run start:dev sms
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  family:
    image: mjkundta/family:latest
    build:
      context: .
      dockerfile: ./apps/family/Dockerfile
      target: development
    command: npm run start:dev family
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    
  storage:
    image: mjkundta/storage:latest
    build:
      context: .
      dockerfile: ./apps/storage/Dockerfile
      target: development
    command: npm run start:dev storage
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  mailer:
    image: mjkundta/mailer:latest
    build:
      context: .
      dockerfile: ./apps/mailer/Dockerfile
      target: development
    command: npm run start:dev mailer
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  chat:
    image: mjkundta/chat:latest
    build:
      context: .
      dockerfile: ./apps/chat/Dockerfile
      target: development
    command: npm run start:dev chat
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  role:
    image: mjkundta/role:latest
    build:
      context: .
      dockerfile: ./apps/role/Dockerfile
      target: development
    command: npm run start:dev role
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  crawler:
    image: mjkundta/crawler:latest
    build:
      context: .
      dockerfile: ./apps/crawler/Dockerfile
      target: development
    command: npm run start:dev crawler
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  calendar:
    image: mjkundta/calendar:latest
    build:
      context: .
      dockerfile: ./apps/calendar/Dockerfile
      target: development
    command: npm run start:dev calendar
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  guideline:
    image: mjkundta/guideline:latest
    build:
      context: .
      dockerfile: ./apps/guideline/Dockerfile
      target: development
    command: npm run start:dev guideline
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  rabbitmq:
    image: rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    restart: always
    ports:
      - 9200:9200
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - TZ=Asia/Ho_Chi_Minh
  
  ibana:
    image: docker.elastic.co/kibana/kibana:7.14.1
    restart: always
    depends_on: 
      - "elasticsearch"
    ports: 
      - 5601:5601
    environment: 
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
      - TZ=Asia/Ho_Chi_Minh