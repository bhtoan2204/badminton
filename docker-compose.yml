version: '3.8'
services:
  gateway:
    image: mjkundta/gateway:latest
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: npm run start:dev gateway
    ports:
      - '8080:8080'
    depends_on:
      - rabbitmq
    restart: on-failure
    volumes:
      - .:/usr/src/app

  auth:
    image: mjkundta/auth:latest
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app

  # user:
  #   image: mjkundta/user:latest
  #   build:
  #     context: .
  #     dockerfile: ./apps/user/Dockerfile
  #     target: development
  #   command: npm run start:dev user
  #   depends_on:
  #     - gateway
  #   restart: on-failure
  #   volumes:
  #     - .:/usr/src/app

  payment:
    image: mjkundta/payment:latest
    build:
      context: .
      dockerfile: ./apps/payment/Dockerfile
      target: development
    command: npm run start:dev payment
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app

  family:
    image: mjkundta/family:latest
    build:
      context: .
      dockerfile: ./apps/family/Dockerfile
      target: development
    command: npm run start:dev family
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app

  storage:
    image: mjkundta/storage:latest
    build:
      context: .
      dockerfile: ./apps/storage/Dockerfile
      target: development
    command: npm run start:dev storage
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app

  # mailer:
  #   image: mjkundta/mailer:latest
  #   build:
  #     context: .
  #     dockerfile: ./apps/mailer/Dockerfile
  #     target: development
  #   command: npm run start:dev mailer
  #   depends_on:
  #     - auth
  #   restart: on-failure
  #   volumes:
  #     - .:/usr/src/app

  chat:
    image: mjkundta/chat:latest
    build:
      context: .
      dockerfile: ./apps/chat/Dockerfile
      target: development
    command: npm run start:dev chat
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app

  crawler:
    image: mjkundta/crawler:latest
    build:
      context: .
      dockerfile: ./apps/crawler/Dockerfile
      target: development
    command: npm run start:dev crawler
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app

  calendar:
    image: mjkundta/calendar:latest
    build:
      context: .
      dockerfile: ./apps/calendar/Dockerfile
      target: development
    command: npm run start:dev calendar
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app

  guideline:
    image: mjkundta/guideline:latest
    build:
      context: .
      dockerfile: ./apps/guideline/Dockerfile
      target: development
    command: npm run start:dev guideline
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app

  notification:
    image: mjkundta/notification:latest
    build:
      context: .
      dockerfile: ./apps/notification/Dockerfile
      target: development
    command: npm run start:dev notification
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app

  education:
    image: mjkundta/education:latest
    build:
      context: .
      dockerfile: ./apps/education/Dockerfile
      target: development
    command: npm run start:dev education
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app

  search:
    image: mjkundta/search:latest
    build:
      context: .
      dockerfile: ./apps/elasticsearch/Dockerfile
      target: development
    command: npm run start:dev elasticsearch
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
    ports:
      - '8081:8081'

  household:
    image: mjkundta/household:latest
    build:
      context: .
      dockerfile: ./apps/household/Dockerfile
      target: development
    command: npm run start:dev household
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app

  finance:
    image: mjkundta/finance:latest
    build:
      context: .
      dockerfile: ./apps/finance/Dockerfile
      target: development
    command: npm run start:dev finance
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app

  shopping:
    image: mjkundta/shopping:latest
    build:
      context: .
      dockerfile: ./apps/shopping/Dockerfile
      target: development
    command: npm run start:dev shopping
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app

  invoice:
    image: mjkundta/invoice:latest
    build:
      context: .
      dockerfile: ./apps/invoice/Dockerfile
      target: development
    command: npm run start:dev invoice
    env_file:
      - ./apps/invoice/.env
    # depends_on:
    #   - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app

  filebeat:
    image: mjkundta/filebeat:latest
    build:
      context: .
      dockerfile: ./apps/filebeat/Dockerfile
    container_name: filebeat
    command: filebeat -e -strict.perms=false
    volumes:
      - ./logs:/src/logs
    labels:
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true

  # jaeger:
  #   image: jaegertracing/all-in-one:1.30
  #   container_name: jaeger
  #   ports:
  #     - '5775:5775/udp'
  #     - '6831:6831/udp'
  #     - '6832:6832/udp'
  #     - '5778:5778'
  #     - '16686:16686'
  #     - '14250:14250'
  #     - '14268:14268'
  #     - '14269:14269'
  #     - '9411:9411'
  #   environment:
  #     COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  rabbitmq:
    image: rabbitmq:management
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: 'rabbitmq'
      RABBITMQ_DEFAULT_PASS: 'Toan123456789'
    ports:
      - '5672:5672'
      - '15672:15672'

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'

  redis-insight:
    image: redis/redisinsight:latest
    restart: always
    ports:
      - '5540:5540'
