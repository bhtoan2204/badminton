version: '3.8'
services:
  gateway:
    image: mjkundta/gateway:latest
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: npm run start:dev gateway
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  auth:
    image: mjkundta/auth:latest
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  user:
    image: mjkundta/user:latest
    build:
      context: .
      dockerfile: ./apps/user/Dockerfile
      target: development
    command: npm run start:dev user
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  payment:
    image: mjkundta/payment:latest
    build:
      context: .
      dockerfile: ./apps/payment/Dockerfile
      target: development
    command: npm run start:dev payment
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  family:
    image: mjkundta/family:latest
    build:
      context: .
      dockerfile: ./apps/family/Dockerfile
      target: development
    command: npm run start:dev family
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    
  storage:
    image: mjkundta/storage:latest
    build:
      context: .
      dockerfile: ./apps/storage/Dockerfile
      target: development
    command: npm run start:dev storage
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  mailer:
    image: mjkundta/mailer:latest
    build:
      context: .
      dockerfile: ./apps/mailer/Dockerfile
      target: development
    command: npm run start:dev mailer
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  chat:
    image: mjkundta/chat:latest
    build:
      context: .
      dockerfile: ./apps/chat/Dockerfile
      target: development
    command: npm run start:dev chat
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  role:
    image: mjkundta/role:latest
    build:
      context: .
      dockerfile: ./apps/role/Dockerfile
      target: development
    command: npm run start:dev role
    depends_on:
      - auth
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  crawler:
    image: mjkundta/crawler:latest
    build:
      context: .
      dockerfile: ./apps/crawler/Dockerfile
      target: development
    command: npm run start:dev crawler
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  calendar:
    image: mjkundta/calendar:latest
    build:
      context: .
      dockerfile: ./apps/calendar/Dockerfile
      target: development
    command: npm run start:dev calendar
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  guideline:
    image: mjkundta/guideline:latest
    build:
      context: .
      dockerfile: ./apps/guideline/Dockerfile
      target: development
    command: npm run start:dev guideline
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  notification:
    image: mjkundta/notification:latest
    build:
      context: .
      dockerfile: ./apps/notification/Dockerfile
      target: development
    command: npm run start:dev notification
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  education:
    image: mjkundta/education:latest
    build:
      context: .
      dockerfile: ./apps/education/Dockerfile
      target: development
    command: npm run start:dev education
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  search:
    image: mjkundta/search:latest
    build:
      context: .
      dockerfile: ./apps/elasticsearch/Dockerfile
      target: development
    command: npm run start:dev elasticsearch
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  household:
    image: mjkundta/household:latest
    build:
      context: .
      dockerfile: ./apps/household/Dockerfile
      target: development
    command: npm run start:dev household
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  finance:
    image: mjkundta/finance:latest
    build:
      context: .
      dockerfile: ./apps/finance/Dockerfile
      target: development
    command: npm run start:dev finance
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  shopping:
    image: mjkundta/shopping:latest
    build:
      context: .
      dockerfile: ./apps/shopping/Dockerfile
      target: development
    command: npm run start:dev shopping
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  
  invoice:
    image: mjkundta/invoice:latest
    build:
      context: .
      dockerfile: ./apps/invoice/Dockerfile
      target: development
    command: npm run start:dev invoice
    depends_on:
      - gateway
    restart: on-failure
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  filebeat:
    image: mjkundta/filebeat:latest
    build:
      context: .
      dockerfile: ./apps/filebeat/Dockerfile
    container_name: filebeat
    command: filebeat -e -strict.perms=false
    volumes:
      - ./logs:/src/logs
    labels:
      co.elastic.logs/json.overwrite_keys: true 
      co.elastic.logs/json.add_error_key: true 
      co.elastic.logs/json.expand_keys: true

  rabbitmq:
    image: rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure