version: '1.0'
services:
  gateway:
    image: mjkundta/gateway:${TAG}
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: production
    command: node dist/apps/gateway/src/main
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
    restart: on-failure
    environment:
      - NODE_ENV=production
  
  auth:
    image: mjkundta/auth:${TAG}
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: production
    command: node dist/apps/auth/src/main
    depends_on:
      - gateway
    restart: on-failure
    environment:
      - NODE_ENV=production
  
  payment:
    image: mjkundta/payment:${TAG}
    build:
      context: .
      dockerfile: ./apps/payment/Dockerfile
      target: production
    command: node dist/apps/payment/src/main
    depends_on:
      - gateway
    restart: on-failure
    environment:
      - NODE_ENV=production
  
  sms:
    image: mjkundta/sms:${TAG}
    build:
      context: .
      dockerfile: ./apps/sms/Dockerfile
      target: production
    command: node dist/apps/sms/src/main
    depends_on:
      - gateway
    restart: on-failure
    environment:
      - NODE_ENV=production
  
  family:
    image: mjkundta/family:${TAG}
    build:
      context: .
      dockerfile: ./apps/family/Dockerfile
      target: production
    command: node dist/apps/family/src/main
    depends_on:
      - gateway
    restart: on-failure
    environment:
      - NODE_ENV=production
    
  storage:
    image: mjkundta/storage:${TAG}
    build:
      context: .
      dockerfile: ./apps/storage/Dockerfile
      target: production
    command: node dist/apps/storage/src/main
    depends_on:
      - gateway
    restart: on-failure
    environment:
      - NODE_ENV=production
  
  mailer:
    image: mjkundta/mailer:${TAG}
    build:
      context: .
      dockerfile: ./apps/mailer/Dockerfile
      target: production
    command: node dist/apps/mailer/src/main
    depends_on:
      - gateway
    restart: on-failure
    environment:
      - NODE_ENV=production

  chat:
    image: mjkundta/chat:${TAG}
    build:
      context: .
      dockerfile: ./apps/chat/Dockerfile
      target: production
    command: node dist/apps/chat/src/main
    depends_on:
      - gateway
    restart: on-failure
    environment:
      - NODE_ENV=production

  role:
    image: mjkundta/role:${TAG}
    build:
      context: .
      dockerfile: ./apps/role/Dockerfile
      target: production
    command: node dist/apps/role/src/main
    depends_on:
      - gateway
    restart: on-failure
    environment:
      - NODE_ENV=production
  
  crawler:
    image: mjkundta/crawler:${TAG}
    build:
      context: .
      dockerfile: ./apps/crawler/Dockerfile
      target: production
    command: node dist/apps/crawler/src/main
    depends_on:
      - gateway
    restart: on-failure
    environment:
      - NODE_ENV=production

  rabbitmq:
    image: rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure