// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v5.27.1
// source: proto/user.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export const userProtobufPackage = 'user';

export interface GetUserRequest {
  idUser: string;
}

export interface GetUserResponse {
  idUser: string;
  email: string;
  phone: string;
  firstname: string;
  lastname: string;
  genre: string;
  birthdate: string;
  avatar: string;
  createdAt: string;
  updatedAt: string;
}

export interface GetUsersRequest {
  idUsers: string[];
}

export interface GetUsersResponse {
  users: GetUserResponse[];
}

export const USER_PACKAGE_NAME = 'user';

export interface UserServiceClient {
  findById(request: GetUserRequest): Observable<GetUserResponse>;

  findByIds(request: GetUsersRequest): Observable<GetUsersResponse>;
}

export interface UserServiceController {
  findById(
    request: GetUserRequest,
  ): Promise<GetUserResponse> | Observable<GetUserResponse> | GetUserResponse;

  findByIds(
    request: GetUsersRequest,
  ):
    | Promise<GetUsersResponse>
    | Observable<GetUsersResponse>
    | GetUsersResponse;
}

export function UserServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['findById', 'findByIds'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('UserService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('UserService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const USER_SERVICE_NAME = 'UserService';
